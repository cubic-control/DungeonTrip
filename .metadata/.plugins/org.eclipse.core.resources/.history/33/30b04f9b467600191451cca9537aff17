package com.fuller.DungeonTrip;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.lwjgl.glfw.GLFW;
import org.lwjgl.glfw.GLFWKeyCallbackI;

public class App
{
    public static void main( String[] args )
    {
    	// Create Log Before This point.
    	System.out.println("New initialization on: " + new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date()));
    	
        if(!GLFW.glfwInit())
        {
        	throw new IllegalStateException("Failed to initialize GLFW");
        }
        // Create Classes Here
        Window window = new Window(640, 480, "Dungeon Trip");
        GameLoop loop = new GameLoop();
        
        // Perform settings and args here
        for(int i = 0; i< args.length; i++)
        {
        	if(args[i].contains("-dev"))
        	{
        		// Turn Dev Mode On
        	}
        	if(args[i].contains("-fullscreen"))
        	{
        		window.setFullscreen(true);
        	}
        }
        // Initialize Classes Here
        window.init();
        
        processInput(window);
        loop.run(window);
    }
    
    static void processInput(Window window)
	{
		GLFWKeyCallbackI keyCallback = null;

		try
		{
			keyCallback = GLFW.glfwSetKeyCallback(window.getWindow(), (handle, key, scancode, action, mods) -> {
				if(action == GLFW.GLFW_PRESS)
				{
					pressInput(key, window);
				}
				else if(action == GLFW.GLFW_RELEASE)
				{
					releaseInput(key, window);
				}
			});

			if(keyCallback != null)
			{
				throw new IllegalStateException("another keyboard handler is already registered!");
			}
		}
		catch (Exception e)
		{
			GLFW.glfwSetKeyCallback(window.getWindow(), keyCallback);
			throw e;
		}
	}
	
	static void pressInput(int key, Window window)
	{
		switch(key)
		{
		case GLFW.GLFW_KEY_ESCAPE:
			window.close();
			break;
		case GLFW.GLFW_KEY_SPACE:
			System.out.println("Print Space");
			break;
		case GLFW.GLFW_KEY_W:
			System.out.println("Move Forward");
			break;
		case GLFW.GLFW_KEY_S:
			System.out.println("Move Backward");
			break;
		}
	}
	
	static void releaseInput(int key, Window window)
	{
		switch(key)
		{
		
		}
	}
}
