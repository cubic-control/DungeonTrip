package com.fuller.DungeonTrip;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

public class Refs {
	public static final String tex = "/assets/textures/";
	public static final String snd = "/assets/sounds/";
	public static boolean debug = false;
	public static boolean dev = false;
	/**
	 * DOESN'T WORK
	 * 
	 * REWORK TEXTUE LOADING METHODE
	 */
	
	public static String getFile(String texture)
	{
		InputStream source = Refs.class.getResourceAsStream(texture);
		String path;
		
		try
		{
			path = Refs.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath();
			
			if(path.startsWith("/"))
			{
				path = path.substring(1);
			}
			path = path + "data";
		}
		catch(URISyntaxException e)
		{
			e.printStackTrace();
			path = null;
		}
		String destination = path + texture;
		System.out.println("Destination: " + destination);
		
		if(copy(source, destination))
		{
			return path + texture;
		}
		else
		{
			return null;
		}
	}
	
	public static boolean copy(InputStream source, String destination)
	{
		boolean success = false;
		
		System.out.println("Copying ->" + source + "\n\tto ->" + destination);
		
		File directory = new File(destination);
		
		if(!directory.exists())
		{
			directory.mkdirs();
		}

        try
        {
            Files.copy(source, Paths.get(destination), StandardCopyOption.REPLACE_EXISTING);
        }
        catch(IOException ex)
        {
            System.out.println("Copying error!");
            ex.printStackTrace();
            success = false;
        }
        return success;
	}

}
