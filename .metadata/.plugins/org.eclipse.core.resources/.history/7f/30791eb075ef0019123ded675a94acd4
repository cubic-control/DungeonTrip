package com.fuller.DungeonTrip.entities;

import org.joml.Vector2f;
import org.joml.Vector3f;

import com.fuller.DungeonTrip.BaseObject;
import com.fuller.DungeonTrip.assets.Assets;
import com.fuller.DungeonTrip.collision.AABB;
import com.fuller.DungeonTrip.io.Window;
import com.fuller.DungeonTrip.render.Camera;
import com.fuller.DungeonTrip.render.Model;
import com.fuller.DungeonTrip.render.RenderMaster;
import com.fuller.DungeonTrip.render.Shader;
import com.fuller.DungeonTrip.render.Texture;
import com.fuller.DungeonTrip.world.World;

public abstract class Entity extends BaseObject{
	private Model model;
	protected AABB bounding_box;
	private Texture texture;
	
	protected Transform transform;
	
	public Entity(Texture texture, Transform transform) {
		model = Assets.getModel();
		this.texture = texture;
		
		this.transform = transform;
		
		bounding_box = new AABB(new Vector2f(transform.pos.x, transform.pos.y), new Vector2f(transform.scale.x, transform.scale.y));
	}
	
	public void move(Vector2f direction)
	{
		transform.pos.add(new Vector3f(direction, 0));
		
		bounding_box.getCenter().set(transform.pos.x, transform.pos.y);
	}
	
	public abstract void update(float delta, Window window, Camera camera, World world);
	
	public void render(Shader shader, Camera camera)
	{
		shader.bind();
		shader.setUniform("sampler", 0);
		shader.setUniform("projection", transform.getProjection(camera.getProjection()));
		texture.bind(0);
		model.render();
	}

	@Override
	public void update() {
		this.update(0, Window.getInstance(), RenderMaster.camera, RenderMaster.world);
	}

	@Override
	public void render() {
		this.render(RenderMaster.shader, RenderMaster.camera);
	}

}
