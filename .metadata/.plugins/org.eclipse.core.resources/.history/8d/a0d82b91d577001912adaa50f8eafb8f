package com.fuller.DungeonTrip.world;

import java.util.HashMap;

import org.joml.Matrix4f;
import org.joml.Vector3f;

import com.fuller.DungeonTrip.render.Camera;
import com.fuller.DungeonTrip.render.Model;
import com.fuller.DungeonTrip.render.Shader;
import com.fuller.DungeonTrip.render.Texture;

public class TileRenderer {
	private HashMap<String, Texture> tile_textures;
	private Model model;
	
	public TileRenderer()
	{
		tile_textures = new HashMap<String, Texture>();
		float[] vertices = new float[] {
				-0.5f, 0.5f, 0,
				0.5f, 0.5f, 0,
				0.5f, -0.5f, 0,
				-0.5f, -0.5f, 0
		};
		float[] texture = new float[] {
				0, 0,
				1, 0,
				1, 1,
				0, 1
		};
		int[] indices = new int[] {
				0, 1, 2,
				2, 3, 0
		};
		
		Model model = new Model(vertices, texture, indices);
		
		for(int i = 0; i < Tile.tiles.length; i++)
		{
			if(!tile_textures.containsKey(Tile.tiles[i].getTexture()))
			{
				String tex = Tile.tiles[i].getTexture();
				tile_textures.put(tex, new Texture(tex + ".png"));
			}
		}
	}
	
	public void renderTile(byte id, int x, int y, Shader shader, Matrix4f world, Camera camera)
	{
		shader.bind();
		
		if(tile_textures.containsKey(Tile.tiles[id].getTexture()))
		{
			tile_textures.get(Tile.tiles[id].getTexture()).bind(0);
		}
		Matrix4f tile_pos = new Matrix4f().translate(new Vector3f(x*2, y*2, 0));
	}

}
